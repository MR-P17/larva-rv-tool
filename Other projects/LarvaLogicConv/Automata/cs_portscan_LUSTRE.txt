node uniqueport ( receive: bool; port: int) returns (unique:bool);
var
port1,port2,port3:int;
cnt:int;
let

  unique = if (receive and port != pre port1 and port != pre port2 and port != pre port3) then true else false;

  port1 = if (unique and pre cnt==0) then port
          else (-1->pre port1);
  port2 = if (unique and pre cnt==1) then port
          else (-1->pre port2);
  port3 = if (unique and pre cnt==2) then port
          else (-1->pre port3);
  cnt = if (unique) then ((0->pre cnt)+1)%3 else (0->pre cnt);
tel

node portscan (_rt_clock:int; unique:bool) returns (violated:bool);
var
 cnt  :int;
 time :int;
let
  time = if (false -> pre unique) then (0 -> pre _rt_clock)
         else if ((0 -> pre cnt) == 0) then _rt_clock
         else (0 -> pre time);
  cnt = if (unique and ((_rt_clock-time) < 2000)) then ((0 -> pre(cnt)) + 1)
        else if (_rt_clock - time < 2000) then (0 -> pre cnt)
        else if (unique) then 1
        else 0;
  violated = if (cnt >= 3) then true else (false -> pre violated);
tel

node main (_rt_clock:int; receive: bool; port: int) returns (violated:bool);
let
violated = portscan (_rt_clock, uniqueport ( receive, port));
tel