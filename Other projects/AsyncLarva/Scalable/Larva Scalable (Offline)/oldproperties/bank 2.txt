IMPORTS{
import nesting.User;
import nesting.Account;
import nesting.Transaction;
}

GLOBAL{

VARIABLES {
int userCnt = 0;
}%%VARIABLES


EVENTS{

addUser() = {*.addUser()}
deleteUser() = {*.deleteUser()}
allUsers() = {User *.*()}

}%%EVENTS


PROPERTY users{

STATES {

BAD{
toomany {}
}

STARTING{
start {}
}
}%%STATES

TRANSITIONS{

start -> toomany [addUser()\userCnt > 3]

start -> start [addUser()\\userCnt++;]

start -> start [deleteUser()\\userCnt--;]

start -> start [allUsers()]

}
}%%PROPERTY

FOREACH (User u, Account a){

VARIABLES {

int accountCnt = 0;
int transactionCnt = 0;

}%%VARIABLES


EVENTS{

addAccount(User u1) = {u1.addAccount()}
where {u = u1;a=null;}

deleteAccount(User u1) = {u1.deleteAccount()}
where {u = u1;a=null;}

allAccounts(User u1) = {u1.*()}
where {u = u1;a=null;}

addTransaction(Account a1) = {a1.addTransaction()}
where {a = a1;u=a1.owner;}

deleteTransaction(Account a1) = {a1.deleteTransaction()}
where {a = a1;u=a1.owner;}

allTransactions(Account a1) = {a1.*()}
where {a = a1;u=a1.owner;}

}%%EVENTS



PROPERTY account{

STATES {

BAD{
toomany {}
}

STARTING{
start {}
}

}%%STATES

TRANSITIONS{

start -> toomany [addAccount()\accountCnt > 5]

start -> start [addAccount()\\accountCnt++;System.out.println("I have access to USER :) " + u + " and to usercnt: " +userCnt);]

start -> start [deleteAccount()\\accountCnt--;]

start -> start [allAccounts()]

}
}%%PROPERTY


PROPERTY transaction{

STATES {

BAD{
toomany {}
}

STARTING{
start {}
}

}%%STATES

TRANSITIONS{

start -> toomany [addTransaction()\transactionCnt > 5]

start -> start [addTransaction()\\transactionCnt++; 
System.out.println("I still have access to Account (a1) :) " + :u,a:a1 + " and to usercnt: " +userCnt);]

start -> start [deleteTransaction()\\transactionCnt --;]

start -> start [allTransactions()]

}
}%%PROPERTY
}%%FOREACH USER ACCOUNT
}%%GLOBAL